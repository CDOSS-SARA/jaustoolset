/*
 * ex: set ro:
 * DO NOT EDIT.
 * generated by smc (http://smc.sourceforge.net/)
 * from file : DiscoveryClient_ReceiveFSMContext.sm
 */

package src.urn_jts_DiscoveryClient_1_0;

import framework.internalEvents.*;
import src.urn_jts_DiscoveryClient_1_0.InternalEvents.*;
import src.urn_jts_DiscoveryClient_1_0.Messages.*;
import java.io.PrintStream;

public class DiscoveryClient_ReceiveFSMContext
    extends statemap.FSMContext
{
//---------------------------------------------------------------
// Member methods.
//

    public DiscoveryClient_ReceiveFSMContext(DiscoveryClient_ReceiveFSM owner)
    {
        super (DiscoveryClient_ReceiveFSM_SM.Receiving_Ready);

        _owner = owner;
    }

    public DiscoveryClient_ReceiveFSMContext(DiscoveryClient_ReceiveFSM owner, DiscoveryClient_ReceiveFSMState initState)
    {
        super (initState);

        _owner = owner;
    }

    public void enterStartState()
    {
        getState().Entry(this);
        return;
    }

    public void BroadcastGlobalTransition()
    {
        _transition = "BroadcastGlobalTransition";
        getState().BroadcastGlobalTransition(this);
        _transition = "";
        return;
    }

    public void BroadcastLocalTransition()
    {
        _transition = "BroadcastLocalTransition";
        getState().BroadcastLocalTransition(this);
        _transition = "";
        return;
    }

    public void GrantNodeIDTransition()
    {
        _transition = "GrantNodeIDTransition";
        getState().GrantNodeIDTransition(this);
        _transition = "";
        return;
    }

    public void RHP_TimeoutTransition()
    {
        _transition = "RHP_TimeoutTransition";
        getState().RHP_TimeoutTransition(this);
        _transition = "";
        return;
    }

    public void ReceiveTransition()
    {
        _transition = "ReceiveTransition";
        getState().ReceiveTransition(this);
        _transition = "";
        return;
    }

    public void ReceiveTransition(GrantNodeID msg, Receive.Body.ReceiveRec transportData)
    {
        _transition = "ReceiveTransition";
        getState().ReceiveTransition(this, msg, transportData);
        _transition = "";
        return;
    }

    public void ReceiveTransition(ReportHeartbeatPulse msg, Receive.Body.ReceiveRec transportData)
    {
        _transition = "ReceiveTransition";
        getState().ReceiveTransition(this, msg, transportData);
        _transition = "";
        return;
    }

    public void ReceiveTransition(ReportIdentification msg, Receive.Body.ReceiveRec transportData)
    {
        _transition = "ReceiveTransition";
        getState().ReceiveTransition(this, msg, transportData);
        _transition = "";
        return;
    }

    public void ReceiveTransition(ReportServices msg, Receive.Body.ReceiveRec transportData)
    {
        _transition = "ReceiveTransition";
        getState().ReceiveTransition(this, msg, transportData);
        _transition = "";
        return;
    }

    public void ReportHeartbeatPulseTransition()
    {
        _transition = "ReportHeartbeatPulseTransition";
        getState().ReportHeartbeatPulseTransition(this);
        _transition = "";
        return;
    }

    public void ReportIdentificationTransition()
    {
        _transition = "ReportIdentificationTransition";
        getState().ReportIdentificationTransition(this);
        _transition = "";
        return;
    }

    public void ReportServicesTransition()
    {
        _transition = "ReportServicesTransition";
        getState().ReportServicesTransition(this);
        _transition = "";
        return;
    }

    public void SendTransition()
    {
        _transition = "SendTransition";
        getState().SendTransition(this);
        _transition = "";
        return;
    }

    public DiscoveryClient_ReceiveFSMState getState()
        throws statemap.StateUndefinedException
    {
        if (_state == null)
        {
            throw(
                new statemap.StateUndefinedException());
        }

        return ((DiscoveryClient_ReceiveFSMState) _state);
    }

    protected DiscoveryClient_ReceiveFSM getOwner()
    {
        return (_owner);
    }

    public void setOwner(DiscoveryClient_ReceiveFSM owner)
    {
        if (owner == null)
        {
            throw (
                new NullPointerException(
                    "null owner"));
        }
        else
        {
            _owner = owner;
        }

        return;
    }

//---------------------------------------------------------------
// Member data.
//

    transient private DiscoveryClient_ReceiveFSM _owner;

    public static abstract class DiscoveryClient_ReceiveFSMState
        extends statemap.State
    {
    //-----------------------------------------------------------
    // Member methods.
    //

        protected DiscoveryClient_ReceiveFSMState(String name, int id)
        {
            super (name, id);
        }

        protected void Entry(DiscoveryClient_ReceiveFSMContext context) {}
        protected void Exit(DiscoveryClient_ReceiveFSMContext context) {}

        protected void BroadcastGlobalTransition(DiscoveryClient_ReceiveFSMContext context)
        {
            Default(context);
        }

        protected void BroadcastLocalTransition(DiscoveryClient_ReceiveFSMContext context)
        {
            Default(context);
        }

        protected void GrantNodeIDTransition(DiscoveryClient_ReceiveFSMContext context)
        {
            Default(context);
        }

        protected void RHP_TimeoutTransition(DiscoveryClient_ReceiveFSMContext context)
        {
            Default(context);
        }

        protected void ReceiveTransition(DiscoveryClient_ReceiveFSMContext context)
        {
            Default(context);
        }

        protected void ReceiveTransition(DiscoveryClient_ReceiveFSMContext context, GrantNodeID msg, Receive.Body.ReceiveRec transportData)
        {
            Default(context);
        }

        protected void ReceiveTransition(DiscoveryClient_ReceiveFSMContext context, ReportHeartbeatPulse msg, Receive.Body.ReceiveRec transportData)
        {
            Default(context);
        }

        protected void ReceiveTransition(DiscoveryClient_ReceiveFSMContext context, ReportIdentification msg, Receive.Body.ReceiveRec transportData)
        {
            Default(context);
        }

        protected void ReceiveTransition(DiscoveryClient_ReceiveFSMContext context, ReportServices msg, Receive.Body.ReceiveRec transportData)
        {
            Default(context);
        }

        protected void ReportHeartbeatPulseTransition(DiscoveryClient_ReceiveFSMContext context)
        {
            Default(context);
        }

        protected void ReportIdentificationTransition(DiscoveryClient_ReceiveFSMContext context)
        {
            Default(context);
        }

        protected void ReportServicesTransition(DiscoveryClient_ReceiveFSMContext context)
        {
            Default(context);
        }

        protected void SendTransition(DiscoveryClient_ReceiveFSMContext context)
        {
            Default(context);
        }

        protected void Default(DiscoveryClient_ReceiveFSMContext context)
        {
            if (context.getDebugFlag() == true)
            {
                PrintStream str = 
                    context.getDebugStream();

                str.println(
                    "TRANSITION   : Default");
            }

            throw (
                new statemap.TransitionUndefinedException(
                    "State: " +
                    context.getState().getName() +
                    ", Transition: " +
                    context.getTransition()));
        }

    //-----------------------------------------------------------
    // Member data.
    //
    }

    /* package */ static abstract class DiscoveryClient_ReceiveFSM_SM
    {
    //-----------------------------------------------------------
    // Member methods.
    //

    //-----------------------------------------------------------
    // Member data.
    //

        //-------------------------------------------------------
        // Constants.
        //
        public static final DiscoveryClient_ReceiveFSM_SM_Receiving_Ready Receiving_Ready =
            new DiscoveryClient_ReceiveFSM_SM_Receiving_Ready("DiscoveryClient_ReceiveFSM_SM.Receiving_Ready", 0);
        public static final DiscoveryClient_ReceiveFSM_SM_Internally_Generated_State_DO_NOT_USE Internally_Generated_State_DO_NOT_USE =
            new DiscoveryClient_ReceiveFSM_SM_Internally_Generated_State_DO_NOT_USE("DiscoveryClient_ReceiveFSM_SM.Internally_Generated_State_DO_NOT_USE", 1);
        private static final DiscoveryClient_ReceiveFSM_SM_Default Default =
            new DiscoveryClient_ReceiveFSM_SM_Default("DiscoveryClient_ReceiveFSM_SM.Default", -1);

    }

    protected static class DiscoveryClient_ReceiveFSM_SM_Default
        extends DiscoveryClient_ReceiveFSMState
    {
    //-----------------------------------------------------------
    // Member methods.
    //

        protected DiscoveryClient_ReceiveFSM_SM_Default(String name, int id)
        {
            super (name, id);
        }
    //-----------------------------------------------------------
    // Member data.
    //
    }

    private static final class DiscoveryClient_ReceiveFSM_SM_Receiving_Ready
        extends DiscoveryClient_ReceiveFSM_SM_Default
    {
    //-------------------------------------------------------
    // Member methods.
    //

        private DiscoveryClient_ReceiveFSM_SM_Receiving_Ready(String name, int id)
        {
            super (name, id);
        }

        protected void RHP_TimeoutTransition(DiscoveryClient_ReceiveFSMContext context)
        {
            DiscoveryClient_ReceiveFSM ctxt = context.getOwner();

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("LEAVING STATE   : DiscoveryClient_ReceiveFSM_SM.Receiving_Ready");
            }
            DiscoveryClient_ReceiveFSMState endState = context.getState();

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("ENTER TRANSITION: DiscoveryClient_ReceiveFSM_SM.DiscoveryClient_ReceiveFSM_SM.Receiving_Ready.RHP_TimeoutTransition()");
            }

            context.clearState();
            try
            {
                ctxt.handleTimeoutAction();
            }
            finally
            {
                if (context.getDebugFlag() == true)
                {
                    PrintStream str = context.getDebugStream();

                    str.println("EXIT TRANSITION : DiscoveryClient_ReceiveFSM_SM.DiscoveryClient_ReceiveFSM_SM.Receiving_Ready.RHP_TimeoutTransition()");
                }

                context.setState(endState);
            }
            return;
        }

        protected void ReceiveTransition(DiscoveryClient_ReceiveFSMContext context, GrantNodeID msg, Receive.Body.ReceiveRec transportData)
        {
            DiscoveryClient_ReceiveFSM ctxt = context.getOwner();

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("LEAVING STATE   : DiscoveryClient_ReceiveFSM_SM.Receiving_Ready");
            }
            DiscoveryClient_ReceiveFSMState endState = context.getState();

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("ENTER TRANSITION: DiscoveryClient_ReceiveFSM_SM.DiscoveryClient_ReceiveFSM_SM.Receiving_Ready.ReceiveTransition(GrantNodeID msg, Receive.Body.ReceiveRec transportData)");
            }

            context.clearState();
            try
            {
                ctxt.updateNodeIDAction(msg, transportData);
            }
            finally
            {
                if (context.getDebugFlag() == true)
                {
                    PrintStream str = context.getDebugStream();

                    str.println("EXIT TRANSITION : DiscoveryClient_ReceiveFSM_SM.DiscoveryClient_ReceiveFSM_SM.Receiving_Ready.ReceiveTransition(GrantNodeID msg, Receive.Body.ReceiveRec transportData)");
                }

                context.setState(endState);
            }
            return;
        }

        protected void ReceiveTransition(DiscoveryClient_ReceiveFSMContext context, ReportHeartbeatPulse msg, Receive.Body.ReceiveRec transportData)
        {
            DiscoveryClient_ReceiveFSM ctxt = context.getOwner();

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("LEAVING STATE   : DiscoveryClient_ReceiveFSM_SM.Receiving_Ready");
            }
            if (ctxt.fromMasterModule( transportData ))
            {
                DiscoveryClient_ReceiveFSMState endState = context.getState();

                if (context.getDebugFlag() == true)
                {
                    PrintStream str = context.getDebugStream();

                    str.println("ENTER TRANSITION: DiscoveryClient_ReceiveFSM_SM.DiscoveryClient_ReceiveFSM_SM.Receiving_Ready.ReceiveTransition(ReportHeartbeatPulse msg, Receive.Body.ReceiveRec transportData)");
                }

                context.clearState();
                try
                {
                    ctxt.updateSubsystemIDAction(transportData);
                    //ctxt.registerServicesAction(transportData);
                }
                finally
                {
                    if (context.getDebugFlag() == true)
                    {
                        PrintStream str = context.getDebugStream();

                        str.println("EXIT TRANSITION : DiscoveryClient_ReceiveFSM_SM.DiscoveryClient_ReceiveFSM_SM.Receiving_Ready.ReceiveTransition(ReportHeartbeatPulse msg, Receive.Body.ReceiveRec transportData)");
                    }

                    context.setState(endState);
                }
            }
            else
            {
                super.ReceiveTransition(context, msg, transportData);
            }

            return;
        }

        protected void ReceiveTransition(DiscoveryClient_ReceiveFSMContext context, ReportIdentification msg, Receive.Body.ReceiveRec transportData)
        {
            DiscoveryClient_ReceiveFSM ctxt = context.getOwner();

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("LEAVING STATE   : DiscoveryClient_ReceiveFSM_SM.Receiving_Ready");
            }
            DiscoveryClient_ReceiveFSMState endState = context.getState();

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("ENTER TRANSITION: DiscoveryClient_ReceiveFSM_SM.DiscoveryClient_ReceiveFSM_SM.Receiving_Ready.ReceiveTransition(ReportIdentification msg, Receive.Body.ReceiveRec transportData)");
            }

            context.clearState();
            try
            {
                ctxt.handleMessageAction(msg, transportData);
            }
            finally
            {
                if (context.getDebugFlag() == true)
                {
                    PrintStream str = context.getDebugStream();

                    str.println("EXIT TRANSITION : DiscoveryClient_ReceiveFSM_SM.DiscoveryClient_ReceiveFSM_SM.Receiving_Ready.ReceiveTransition(ReportIdentification msg, Receive.Body.ReceiveRec transportData)");
                }

                context.setState(endState);
            }
            return;
        }

        protected void ReceiveTransition(DiscoveryClient_ReceiveFSMContext context, ReportServices msg, Receive.Body.ReceiveRec transportData)
        {
            DiscoveryClient_ReceiveFSM ctxt = context.getOwner();

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("LEAVING STATE   : DiscoveryClient_ReceiveFSM_SM.Receiving_Ready");
            }
            DiscoveryClient_ReceiveFSMState endState = context.getState();

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("ENTER TRANSITION: DiscoveryClient_ReceiveFSM_SM.DiscoveryClient_ReceiveFSM_SM.Receiving_Ready.ReceiveTransition(ReportServices msg, Receive.Body.ReceiveRec transportData)");
            }

            context.clearState();
            try
            {
                ctxt.parseServiceListAction(msg, transportData);
            }
            finally
            {
                if (context.getDebugFlag() == true)
                {
                    PrintStream str = context.getDebugStream();

                    str.println("EXIT TRANSITION : DiscoveryClient_ReceiveFSM_SM.DiscoveryClient_ReceiveFSM_SM.Receiving_Ready.ReceiveTransition(ReportServices msg, Receive.Body.ReceiveRec transportData)");
                }

                context.setState(endState);
            }
            return;
        }

    //-------------------------------------------------------
    // Member data.
    //
    }

    private static final class DiscoveryClient_ReceiveFSM_SM_Internally_Generated_State_DO_NOT_USE
        extends DiscoveryClient_ReceiveFSM_SM_Default
    {
    //-------------------------------------------------------
    // Member methods.
    //

        private DiscoveryClient_ReceiveFSM_SM_Internally_Generated_State_DO_NOT_USE(String name, int id)
        {
            super (name, id);
        }

        protected void BroadcastGlobalTransition(DiscoveryClient_ReceiveFSMContext context)
        {

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("LEAVING STATE   : DiscoveryClient_ReceiveFSM_SM.Internally_Generated_State_DO_NOT_USE");
            }

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("ENTER TRANSITION: DiscoveryClient_ReceiveFSM_SM.DiscoveryClient_ReceiveFSM_SM.Internally_Generated_State_DO_NOT_USE.BroadcastGlobalTransition()");
            }

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("EXIT TRANSITION : DiscoveryClient_ReceiveFSM_SM.DiscoveryClient_ReceiveFSM_SM.Internally_Generated_State_DO_NOT_USE.BroadcastGlobalTransition()");
            }

            return;
        }

        protected void BroadcastLocalTransition(DiscoveryClient_ReceiveFSMContext context)
        {

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("LEAVING STATE   : DiscoveryClient_ReceiveFSM_SM.Internally_Generated_State_DO_NOT_USE");
            }

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("ENTER TRANSITION: DiscoveryClient_ReceiveFSM_SM.DiscoveryClient_ReceiveFSM_SM.Internally_Generated_State_DO_NOT_USE.BroadcastLocalTransition()");
            }

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("EXIT TRANSITION : DiscoveryClient_ReceiveFSM_SM.DiscoveryClient_ReceiveFSM_SM.Internally_Generated_State_DO_NOT_USE.BroadcastLocalTransition()");
            }

            return;
        }

        protected void GrantNodeIDTransition(DiscoveryClient_ReceiveFSMContext context)
        {

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("LEAVING STATE   : DiscoveryClient_ReceiveFSM_SM.Internally_Generated_State_DO_NOT_USE");
            }

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("ENTER TRANSITION: DiscoveryClient_ReceiveFSM_SM.DiscoveryClient_ReceiveFSM_SM.Internally_Generated_State_DO_NOT_USE.GrantNodeIDTransition()");
            }

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("EXIT TRANSITION : DiscoveryClient_ReceiveFSM_SM.DiscoveryClient_ReceiveFSM_SM.Internally_Generated_State_DO_NOT_USE.GrantNodeIDTransition()");
            }

            return;
        }

        protected void RHP_TimeoutTransition(DiscoveryClient_ReceiveFSMContext context)
        {

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("LEAVING STATE   : DiscoveryClient_ReceiveFSM_SM.Internally_Generated_State_DO_NOT_USE");
            }

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("ENTER TRANSITION: DiscoveryClient_ReceiveFSM_SM.DiscoveryClient_ReceiveFSM_SM.Internally_Generated_State_DO_NOT_USE.RHP_TimeoutTransition()");
            }

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("EXIT TRANSITION : DiscoveryClient_ReceiveFSM_SM.DiscoveryClient_ReceiveFSM_SM.Internally_Generated_State_DO_NOT_USE.RHP_TimeoutTransition()");
            }

            return;
        }

        protected void ReceiveTransition(DiscoveryClient_ReceiveFSMContext context)
        {

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("LEAVING STATE   : DiscoveryClient_ReceiveFSM_SM.Internally_Generated_State_DO_NOT_USE");
            }

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("ENTER TRANSITION: DiscoveryClient_ReceiveFSM_SM.DiscoveryClient_ReceiveFSM_SM.Internally_Generated_State_DO_NOT_USE.ReceiveTransition()");
            }

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("EXIT TRANSITION : DiscoveryClient_ReceiveFSM_SM.DiscoveryClient_ReceiveFSM_SM.Internally_Generated_State_DO_NOT_USE.ReceiveTransition()");
            }

            return;
        }

        protected void ReportHeartbeatPulseTransition(DiscoveryClient_ReceiveFSMContext context)
        {

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("LEAVING STATE   : DiscoveryClient_ReceiveFSM_SM.Internally_Generated_State_DO_NOT_USE");
            }

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("ENTER TRANSITION: DiscoveryClient_ReceiveFSM_SM.DiscoveryClient_ReceiveFSM_SM.Internally_Generated_State_DO_NOT_USE.ReportHeartbeatPulseTransition()");
            }

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("EXIT TRANSITION : DiscoveryClient_ReceiveFSM_SM.DiscoveryClient_ReceiveFSM_SM.Internally_Generated_State_DO_NOT_USE.ReportHeartbeatPulseTransition()");
            }

            return;
        }

        protected void ReportIdentificationTransition(DiscoveryClient_ReceiveFSMContext context)
        {

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("LEAVING STATE   : DiscoveryClient_ReceiveFSM_SM.Internally_Generated_State_DO_NOT_USE");
            }

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("ENTER TRANSITION: DiscoveryClient_ReceiveFSM_SM.DiscoveryClient_ReceiveFSM_SM.Internally_Generated_State_DO_NOT_USE.ReportIdentificationTransition()");
            }

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("EXIT TRANSITION : DiscoveryClient_ReceiveFSM_SM.DiscoveryClient_ReceiveFSM_SM.Internally_Generated_State_DO_NOT_USE.ReportIdentificationTransition()");
            }

            return;
        }

        protected void ReportServicesTransition(DiscoveryClient_ReceiveFSMContext context)
        {

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("LEAVING STATE   : DiscoveryClient_ReceiveFSM_SM.Internally_Generated_State_DO_NOT_USE");
            }

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("ENTER TRANSITION: DiscoveryClient_ReceiveFSM_SM.DiscoveryClient_ReceiveFSM_SM.Internally_Generated_State_DO_NOT_USE.ReportServicesTransition()");
            }

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("EXIT TRANSITION : DiscoveryClient_ReceiveFSM_SM.DiscoveryClient_ReceiveFSM_SM.Internally_Generated_State_DO_NOT_USE.ReportServicesTransition()");
            }

            return;
        }

        protected void SendTransition(DiscoveryClient_ReceiveFSMContext context)
        {

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("LEAVING STATE   : DiscoveryClient_ReceiveFSM_SM.Internally_Generated_State_DO_NOT_USE");
            }

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("ENTER TRANSITION: DiscoveryClient_ReceiveFSM_SM.DiscoveryClient_ReceiveFSM_SM.Internally_Generated_State_DO_NOT_USE.SendTransition()");
            }

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("EXIT TRANSITION : DiscoveryClient_ReceiveFSM_SM.DiscoveryClient_ReceiveFSM_SM.Internally_Generated_State_DO_NOT_USE.SendTransition()");
            }

            return;
        }

    //-------------------------------------------------------
    // Member data.
    //
    }
}

/*
 * Local variables:
 *  buffer-read-only: t
 * End:
 */
