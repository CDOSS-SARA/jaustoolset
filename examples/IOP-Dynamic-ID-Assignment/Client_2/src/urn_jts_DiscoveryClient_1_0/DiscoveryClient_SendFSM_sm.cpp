/*
 * ex: set ro:
 * DO NOT EDIT.
 * generated by smc (http://smc.sourceforge.net/)
 * from file : DiscoveryClient_SendFSM_sm.sm
 */

#include "urn_jts_DiscoveryClient_1_0/Messages/MessageSet.h"
#include "urn_jts_DiscoveryClient_1_0/DiscoveryClient_SendFSM.h"
#include "include/urn_jts_DiscoveryClient_1_0/DiscoveryClient_SendFSM_sm.h"

using namespace statemap;

namespace urn_jts_DiscoveryClient_1_0
{
    // Static class declarations.
    DiscoveryClient_SendFSM_SM_Sending DiscoveryClient_SendFSM_SM::Sending("DiscoveryClient_SendFSM_SM::Sending", 0);
    DiscoveryClient_SendFSM_SM_Internally_Generated_State_DO_NOT_USE DiscoveryClient_SendFSM_SM::Internally_Generated_State_DO_NOT_USE("DiscoveryClient_SendFSM_SM::Internally_Generated_State_DO_NOT_USE", 1);

    void DiscoveryClient_SendFSMState::BroadcastGlobalTransition(DiscoveryClient_SendFSMContext& context)
    {
        Default(context);
        return;
    }

    void DiscoveryClient_SendFSMState::BroadcastLocalTransition(DiscoveryClient_SendFSMContext& context)
    {
        Default(context);
        return;
    }

    void DiscoveryClient_SendFSMState::GrantNodeIDTransition(DiscoveryClient_SendFSMContext& context)
    {
        Default(context);
        return;
    }

    void DiscoveryClient_SendFSMState::RHP_TimeoutTransition(DiscoveryClient_SendFSMContext& context)
    {
        Default(context);
        return;
    }

    void DiscoveryClient_SendFSMState::ReceiveTransition(DiscoveryClient_SendFSMContext& context)
    {
        Default(context);
        return;
    }

    void DiscoveryClient_SendFSMState::ReportHeartbeatPulseTransition(DiscoveryClient_SendFSMContext& context)
    {
        Default(context);
        return;
    }

    void DiscoveryClient_SendFSMState::ReportIdentificationTransition(DiscoveryClient_SendFSMContext& context)
    {
        Default(context);
        return;
    }

    void DiscoveryClient_SendFSMState::ReportServicesTransition(DiscoveryClient_SendFSMContext& context)
    {
        Default(context);
        return;
    }

    void DiscoveryClient_SendFSMState::SendTransition(DiscoveryClient_SendFSMContext& context)
    {
        Default(context);
        return;
    }

    void DiscoveryClient_SendFSMState::Default(DiscoveryClient_SendFSMContext& context)
    {
        if (context.getDebugFlag() == true)
        {
            std::ostream& str = context.getDebugStream();

            str << "TRANSITION   : Default"
                << std::endl;
        }

        throw (
            TransitionUndefinedException(
                context.getState().getName(),
                context.getTransition()));

        return;
    }

    void DiscoveryClient_SendFSM_SM_Internally_Generated_State_DO_NOT_USE::BroadcastGlobalTransition(DiscoveryClient_SendFSMContext& context)
    {

        if (context.getDebugFlag() == true)
        {
            std::ostream& str = context.getDebugStream();

            str << "LEAVING STATE   : DiscoveryClient_SendFSM_SM::Internally_Generated_State_DO_NOT_USE"
            << std::endl;
        }

        if (context.getDebugFlag() == true)
        {
            std::ostream& str = context.getDebugStream();

            str << "ENTER TRANSITION: DiscoveryClient_SendFSM_SM::Internally_Generated_State_DO_NOT_USE::BroadcastGlobalTransition()"
                << std::endl;
        }

        if (context.getDebugFlag() == true)
        {
            std::ostream& str = context.getDebugStream();

            str << "EXIT TRANSITION : DiscoveryClient_SendFSM_SM::Internally_Generated_State_DO_NOT_USE::BroadcastGlobalTransition()"
                << std::endl;
        }


        return;
    }

    void DiscoveryClient_SendFSM_SM_Internally_Generated_State_DO_NOT_USE::BroadcastLocalTransition(DiscoveryClient_SendFSMContext& context)
    {

        if (context.getDebugFlag() == true)
        {
            std::ostream& str = context.getDebugStream();

            str << "LEAVING STATE   : DiscoveryClient_SendFSM_SM::Internally_Generated_State_DO_NOT_USE"
            << std::endl;
        }

        if (context.getDebugFlag() == true)
        {
            std::ostream& str = context.getDebugStream();

            str << "ENTER TRANSITION: DiscoveryClient_SendFSM_SM::Internally_Generated_State_DO_NOT_USE::BroadcastLocalTransition()"
                << std::endl;
        }

        if (context.getDebugFlag() == true)
        {
            std::ostream& str = context.getDebugStream();

            str << "EXIT TRANSITION : DiscoveryClient_SendFSM_SM::Internally_Generated_State_DO_NOT_USE::BroadcastLocalTransition()"
                << std::endl;
        }


        return;
    }

    void DiscoveryClient_SendFSM_SM_Internally_Generated_State_DO_NOT_USE::GrantNodeIDTransition(DiscoveryClient_SendFSMContext& context)
    {

        if (context.getDebugFlag() == true)
        {
            std::ostream& str = context.getDebugStream();

            str << "LEAVING STATE   : DiscoveryClient_SendFSM_SM::Internally_Generated_State_DO_NOT_USE"
            << std::endl;
        }

        if (context.getDebugFlag() == true)
        {
            std::ostream& str = context.getDebugStream();

            str << "ENTER TRANSITION: DiscoveryClient_SendFSM_SM::Internally_Generated_State_DO_NOT_USE::GrantNodeIDTransition()"
                << std::endl;
        }

        if (context.getDebugFlag() == true)
        {
            std::ostream& str = context.getDebugStream();

            str << "EXIT TRANSITION : DiscoveryClient_SendFSM_SM::Internally_Generated_State_DO_NOT_USE::GrantNodeIDTransition()"
                << std::endl;
        }


        return;
    }

    void DiscoveryClient_SendFSM_SM_Internally_Generated_State_DO_NOT_USE::RHP_TimeoutTransition(DiscoveryClient_SendFSMContext& context)
    {

        if (context.getDebugFlag() == true)
        {
            std::ostream& str = context.getDebugStream();

            str << "LEAVING STATE   : DiscoveryClient_SendFSM_SM::Internally_Generated_State_DO_NOT_USE"
            << std::endl;
        }

        if (context.getDebugFlag() == true)
        {
            std::ostream& str = context.getDebugStream();

            str << "ENTER TRANSITION: DiscoveryClient_SendFSM_SM::Internally_Generated_State_DO_NOT_USE::RHP_TimeoutTransition()"
                << std::endl;
        }

        if (context.getDebugFlag() == true)
        {
            std::ostream& str = context.getDebugStream();

            str << "EXIT TRANSITION : DiscoveryClient_SendFSM_SM::Internally_Generated_State_DO_NOT_USE::RHP_TimeoutTransition()"
                << std::endl;
        }


        return;
    }

    void DiscoveryClient_SendFSM_SM_Internally_Generated_State_DO_NOT_USE::ReceiveTransition(DiscoveryClient_SendFSMContext& context)
    {

        if (context.getDebugFlag() == true)
        {
            std::ostream& str = context.getDebugStream();

            str << "LEAVING STATE   : DiscoveryClient_SendFSM_SM::Internally_Generated_State_DO_NOT_USE"
            << std::endl;
        }

        if (context.getDebugFlag() == true)
        {
            std::ostream& str = context.getDebugStream();

            str << "ENTER TRANSITION: DiscoveryClient_SendFSM_SM::Internally_Generated_State_DO_NOT_USE::ReceiveTransition()"
                << std::endl;
        }

        if (context.getDebugFlag() == true)
        {
            std::ostream& str = context.getDebugStream();

            str << "EXIT TRANSITION : DiscoveryClient_SendFSM_SM::Internally_Generated_State_DO_NOT_USE::ReceiveTransition()"
                << std::endl;
        }


        return;
    }

    void DiscoveryClient_SendFSM_SM_Internally_Generated_State_DO_NOT_USE::ReportHeartbeatPulseTransition(DiscoveryClient_SendFSMContext& context)
    {

        if (context.getDebugFlag() == true)
        {
            std::ostream& str = context.getDebugStream();

            str << "LEAVING STATE   : DiscoveryClient_SendFSM_SM::Internally_Generated_State_DO_NOT_USE"
            << std::endl;
        }

        if (context.getDebugFlag() == true)
        {
            std::ostream& str = context.getDebugStream();

            str << "ENTER TRANSITION: DiscoveryClient_SendFSM_SM::Internally_Generated_State_DO_NOT_USE::ReportHeartbeatPulseTransition()"
                << std::endl;
        }

        if (context.getDebugFlag() == true)
        {
            std::ostream& str = context.getDebugStream();

            str << "EXIT TRANSITION : DiscoveryClient_SendFSM_SM::Internally_Generated_State_DO_NOT_USE::ReportHeartbeatPulseTransition()"
                << std::endl;
        }


        return;
    }

    void DiscoveryClient_SendFSM_SM_Internally_Generated_State_DO_NOT_USE::ReportIdentificationTransition(DiscoveryClient_SendFSMContext& context)
    {

        if (context.getDebugFlag() == true)
        {
            std::ostream& str = context.getDebugStream();

            str << "LEAVING STATE   : DiscoveryClient_SendFSM_SM::Internally_Generated_State_DO_NOT_USE"
            << std::endl;
        }

        if (context.getDebugFlag() == true)
        {
            std::ostream& str = context.getDebugStream();

            str << "ENTER TRANSITION: DiscoveryClient_SendFSM_SM::Internally_Generated_State_DO_NOT_USE::ReportIdentificationTransition()"
                << std::endl;
        }

        if (context.getDebugFlag() == true)
        {
            std::ostream& str = context.getDebugStream();

            str << "EXIT TRANSITION : DiscoveryClient_SendFSM_SM::Internally_Generated_State_DO_NOT_USE::ReportIdentificationTransition()"
                << std::endl;
        }


        return;
    }

    void DiscoveryClient_SendFSM_SM_Internally_Generated_State_DO_NOT_USE::ReportServicesTransition(DiscoveryClient_SendFSMContext& context)
    {

        if (context.getDebugFlag() == true)
        {
            std::ostream& str = context.getDebugStream();

            str << "LEAVING STATE   : DiscoveryClient_SendFSM_SM::Internally_Generated_State_DO_NOT_USE"
            << std::endl;
        }

        if (context.getDebugFlag() == true)
        {
            std::ostream& str = context.getDebugStream();

            str << "ENTER TRANSITION: DiscoveryClient_SendFSM_SM::Internally_Generated_State_DO_NOT_USE::ReportServicesTransition()"
                << std::endl;
        }

        if (context.getDebugFlag() == true)
        {
            std::ostream& str = context.getDebugStream();

            str << "EXIT TRANSITION : DiscoveryClient_SendFSM_SM::Internally_Generated_State_DO_NOT_USE::ReportServicesTransition()"
                << std::endl;
        }


        return;
    }

    void DiscoveryClient_SendFSM_SM_Internally_Generated_State_DO_NOT_USE::SendTransition(DiscoveryClient_SendFSMContext& context)
    {

        if (context.getDebugFlag() == true)
        {
            std::ostream& str = context.getDebugStream();

            str << "LEAVING STATE   : DiscoveryClient_SendFSM_SM::Internally_Generated_State_DO_NOT_USE"
            << std::endl;
        }

        if (context.getDebugFlag() == true)
        {
            std::ostream& str = context.getDebugStream();

            str << "ENTER TRANSITION: DiscoveryClient_SendFSM_SM::Internally_Generated_State_DO_NOT_USE::SendTransition()"
                << std::endl;
        }

        if (context.getDebugFlag() == true)
        {
            std::ostream& str = context.getDebugStream();

            str << "EXIT TRANSITION : DiscoveryClient_SendFSM_SM::Internally_Generated_State_DO_NOT_USE::SendTransition()"
                << std::endl;
        }


        return;
    }
}

/*
 * Local variables:
 *  buffer-read-only: t
 * End:
 */
